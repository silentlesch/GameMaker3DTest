<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>count=1;

readfromfile=working_directory

global.vcount=0;
global.ecount=0;

myvar[0]=0;
myvar[1]=0;
myvar[2]=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//instance_create(mouse_x,mouse_y,orthogonal);
//count+=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//instance_create(mouse_x,mouse_y,perspective);
//count+=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(50,90,count);
if(instance_exists(perspective)){draw_text(50,30,"FOV "+ string(perspective.fov));}
draw_text(50,50,"Vertex count "+string(global.vcount));
draw_text(50,70,"Edge count "+string(global.ecount));
draw_text(50,90,fps_real);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>file = file_text_open_read(working_directory+"\teapot.obj");
global.vcount=0;
global.ecount=0;

if(file!=-1){

    /*while(!file_text_eof(file)){
        
        for(i=0;i&lt;7;i++){file_text_readln(file);}
        
        readfromfile= file_text_read_string(file);
        file_text_readln(file);
        
        if(string_char_at(readfromfile, 1)=="#"){
            mystring=string_delete(readfromfile, 1, 2);
            pos=string_pos(" ", mystring);
            //global.vcount=real(string_delete(mystring,pos,string_length(mystring)))-1;
            show_debug_message("VCount found: "+string(real(string_delete(mystring,pos,string_length(mystring)))-1));
        }
        
    }

    file_text_close(file);
    file = file_text_open_read(working_directory+"\teapot.obj");*/
    
    while(string_char_at(readfromfile, 1)!="v"){readfromfile= file_text_read_string(file); file_text_readln(file);}

    iii=instance_create(room_width/2,room_height/2,perspective);
    show_debug_message("Reading file");

//    readfromfile= file_text_read_string(file);
//    file_text_readln(file);
    
    i=0;
    while(string_char_at(readfromfile, 1)=="v"){ //for(i=0;i&lt;global.vcount;i++){
        
        mystring=string_delete(readfromfile, 1, 3);
        pos=string_pos(" ", mystring);
        iii.points[i,0]=real(string_delete(mystring,pos,string_length(mystring)));
        mystring=string_delete(mystring,1,pos);
        
        pos=string_pos(" ", mystring);
        iii.points[i,1]=real(string_delete(mystring,pos,string_length(mystring)));
        mystring=string_delete(mystring,1,pos);
        
        pos=string_pos(" ", mystring);
        iii.points[i,2]=-real(string_delete(mystring,pos,string_length(mystring)));
        
        //show_debug_message(string(iii.points[i,0])+" "+string(iii.points[i,1])+" "+string(iii.points[i,2]));
        global.vcount+=1;
        i+=1;
        
        readfromfile= file_text_read_string(file);
        file_text_readln(file);
    }
    show_debug_message("Found "+string(global.vcount)+" vertices");
    show_debug_message("Continue to reading edges");
    while(string_char_at(readfromfile, 1)!="f"){readfromfile= file_text_read_string(file); file_text_readln(file);}

    i=0;
    while(string_char_at(readfromfile, 1)=="f"){ //for(i=0;i&lt;512;i++){

        
        mystring=string_delete(readfromfile, 1, 2);
        pos=string_pos(" ", mystring);
        iii.edgexy[i,0]=real(string_delete(mystring,pos,string_length(mystring)))-1;
        mystring=string_delete(mystring,1,pos);
        
        pos=string_pos(" ", mystring);
        iii.edgexy[i,1]=real(string_delete(mystring,pos,string_length(mystring)))-1;
        mystring=string_delete(mystring,1,pos);
        
        pos=string_pos(" ", mystring);
        iii.edgexy[i,2]=real(string_delete(mystring,pos,string_length(mystring)))-1;
        
        if(string_pos(" ", mystring)!=0){
            mystring=string_delete(mystring,1,pos);
            pos=string_pos(" ", mystring);
            iii.edgexy[i,3]=real(string_delete(mystring,pos,string_length(mystring)))-1;
        }else{iii.edgexy[i,3]=-1;}
        global.ecount+=1;
        i+=1;
        
        readfromfile= file_text_read_string(file);
        file_text_readln(file);
        
        //show_debug_message(string(iii.drawxy[i,0])+" "+string(iii.drawxy[i,1])+" "+string(iii.drawxy[i,2])+" "+string(iii.drawxy[i,3]));
        }
        show_debug_message("Found "+string(global.ecount)+" edges");
    with(iii){
        dectosph();
        godesu();
    }
    show_debug_message("Reading finished");
    file_text_close(file);
}else{
    readfromfile="Cannot open file";
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
